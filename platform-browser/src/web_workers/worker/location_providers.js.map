{"version":3,"file":"location_providers.js","sourceRoot":"","sources":["../../../../../../modules/@angular/platform-browser/src/web_workers/worker/location_providers.ts"],"names":[],"mappings":";AAAA,qBAAsC,eAAe,CAAC,CAAA;AACtD,uBAA+B,iBAAiB,CAAC,CAAA;AACjD,kCAAwC,qBAAqB,CAAC,CAAA;AAE9D;;;GAGG;AACU,qCAA6B,GAAqB;IAC7D,uBAAuB,CAAC,EAAC,OAAO,EAAE,yBAAgB,EAAE,QAAQ,EAAE,6CAAyB,EAAC;IACxF;QACE,OAAO,EAAE,sBAAe;QACxB,UAAU,EAAE,UAAC,gBAA2C,EAAE,IAAY,IAAK,OAAA;YAC3D,OAAA,kBAAkB,CAAC,gBAAgB,EAAE,IAAI,CAAC;QAA1C,CAA0C,EADiB,CACjB;QAC1D,KAAK,EAAE,IAAI;QACX,IAAI,EAAE,CAAC,yBAAgB,EAAE,aAAM,CAAC;KACjC;CACF,CAAC;AAEF,4BAA4B,gBAA2C,EAAE,IAAY;IACnF,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,cAAM,OAAA,gBAAgB,CAAC,IAAI,EAAE,EAAvB,CAAuB,CAAC,CAAC;AACxD,CAAC","sourcesContent":["import {NgZone, APP_INITIALIZER} from '@angular/core';\nimport {PlatformLocation} from '@angular/common';\nimport {WebWorkerPlatformLocation} from './platform_location';\n\n/**\n * Those providers should be added when the router is used in a worker context in addition to the\n * {@link ROUTER_PROVIDERS} and after them.\n */\nexport const WORKER_APP_LOCATION_PROVIDERS = /*@ts2dart_const*/[\n  /* @ts2dart_Provider */ {provide: PlatformLocation, useClass: WebWorkerPlatformLocation},\n  {\n    provide: APP_INITIALIZER,\n    useFactory: (platformLocation: WebWorkerPlatformLocation, zone: NgZone) => () =>\n                    initWorkerLocation(platformLocation, zone),\n    multi: true,\n    deps: [PlatformLocation, NgZone]\n  }\n];\n\nfunction initWorkerLocation(platformLocation: WebWorkerPlatformLocation, zone: NgZone): Promise<boolean> {\n  return zone.runGuarded(() => platformLocation.init());\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}