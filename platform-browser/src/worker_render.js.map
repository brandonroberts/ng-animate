{"version":3,"file":"worker_render.js","sourceRoot":"","sources":["../../../../modules/@angular/platform-browser/src/worker_render.ts"],"names":[],"mappings":"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","sourcesContent":["import {isBlank, isPresent} from \"./facade/lang\";\nimport {MessageBus} from \"./web_workers/shared/message_bus\";\nimport {\n  NgZone,\n  Injector,\n  OpaqueToken,\n  Testability,\n  ExceptionHandler,\n  APPLICATION_COMMON_PROVIDERS,\n  PLATFORM_COMMON_PROVIDERS,\n  RootRenderer,\n  PLATFORM_INITIALIZER,\n  PlatformRef,\n  getPlatform,\n  createPlatform,\n  assertPlatform,\n  ReflectiveInjector,\n  Injectable,\n  APP_INITIALIZER,\n  ApplicationRef\n} from \"@angular/core\";\nimport {wtfInit, AnimationDriver, NoOpAnimationDriver} from '../core_private';\nimport {getDOM} from \"./dom/dom_adapter\";\nimport {DomEventsPlugin} from \"./dom/events/dom_events\";\nimport {KeyEventsPlugin} from \"./dom/events/key_events\";\nimport {HammerGesturesPlugin, HAMMER_GESTURE_CONFIG, HammerGestureConfig} from \"./dom/events/hammer_gestures\";\nimport {DOCUMENT} from \"./dom/dom_tokens\";\nimport {DomRootRenderer, DomRootRenderer_} from \"./dom/dom_renderer\";\nimport {DomSharedStylesHost, SharedStylesHost} from \"./dom/shared_styles_host\";\nimport {BrowserGetTestability} from \"./browser/testability\";\nimport {BrowserDomAdapter} from \"./browser/browser_adapter\";\nimport {MessageBasedRenderer} from \"./web_workers/ui/renderer\";\nimport {ServiceMessageBrokerFactory, ServiceMessageBrokerFactory_} from \"./web_workers/shared/service_message_broker\";\nimport {ClientMessageBrokerFactory, ClientMessageBrokerFactory_} from \"./web_workers/shared/client_message_broker\";\nimport {Serializer} from \"./web_workers/shared/serializer\";\nimport {ON_WEB_WORKER} from \"./web_workers/shared/api\";\nimport {RenderStore} from \"./web_workers/shared/render_store\";\nimport {EventManager, EVENT_MANAGER_PLUGINS} from \"./dom/events/event_manager\";\nimport {BROWSER_SANITIZATION_PROVIDERS, BROWSER_APP_COMPILER_PROVIDERS} from \"./browser\";\nimport {PostMessageBus, PostMessageBusSink, PostMessageBusSource} from \"./web_workers/shared/post_message_bus\";\nimport {BaseException} from \"./facade/exceptions\";\nimport {PromiseWrapper} from \"./facade/async\";\n\nconst WORKER_RENDER_PLATFORM_MARKER = new OpaqueToken('WorkerRenderPlatformMarker');\nexport class WebWorkerInstance {\n  public worker: Worker;\n  public bus: MessageBus;\n\n  /** @internal */\n  public init(worker: Worker, bus: MessageBus) {\n    this.worker = worker;\n    this.bus = bus;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n}\n\nexport const WORKER_SCRIPT: OpaqueToken = new OpaqueToken(\"WebWorkerScript\");\n\n/**\n * A multiple providers used to automatically call the `start()` method after the service is\n * created.\n *\n * TODO(vicb): create an interface for startable services to implement\n */\nexport const WORKER_RENDER_STARTABLE_MESSAGING_SERVICE = new OpaqueToken('WorkerRenderStartableMsgService');\n\nexport const WORKER_RENDER_PLATFORM_PROVIDERS: Array<any /*Type | Provider | any[]*/> = [\n  PLATFORM_COMMON_PROVIDERS,\n  {provide: WORKER_RENDER_PLATFORM_MARKER, useValue: true},\n  {provide: PLATFORM_INITIALIZER, useValue: initWebWorkerRenderPlatform, multi: true}\n];\n\nexport const WORKER_RENDER_APPLICATION_PROVIDERS: Array<any /*Type | Provider | any[]*/> =\n    [\n      APPLICATION_COMMON_PROVIDERS,\n      MessageBasedRenderer,\n      {provide: WORKER_RENDER_STARTABLE_MESSAGING_SERVICE, useExisting: MessageBasedRenderer, multi: true},\n      BROWSER_SANITIZATION_PROVIDERS,\n      {provide: ExceptionHandler, useFactory: _exceptionHandler, deps: []},\n      {provide: DOCUMENT, useFactory: _document, deps: []},\n      // TODO(jteplitz602): Investigate if we definitely need EVENT_MANAGER on the render thread\n      // #5298\n      {provide: EVENT_MANAGER_PLUGINS, useClass: DomEventsPlugin, multi: true},\n      {provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, multi: true},\n      {provide: EVENT_MANAGER_PLUGINS, useClass: HammerGesturesPlugin, multi: true},\n      {provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig},\n      {provide: DomRootRenderer, useClass: DomRootRenderer_},\n      {provide: RootRenderer, useExisting: DomRootRenderer},\n      {provide: SharedStylesHost, useExisting: DomSharedStylesHost},\n      {provide: ServiceMessageBrokerFactory, useClass: ServiceMessageBrokerFactory_},\n      {provide: ClientMessageBrokerFactory, useClass: ClientMessageBrokerFactory_},\n      {provide: AnimationDriver, useFactory: _resolveDefaultAnimationDriver},\n      Serializer,\n      {provide: ON_WEB_WORKER, useValue: false},\n      RenderStore,\n      DomSharedStylesHost,\n      Testability,\n      EventManager,\n      WebWorkerInstance,\n      {\n        provide: APP_INITIALIZER,\n        useFactory: (injector => () => initWebWorkerApplication(injector)),\n        multi: true,\n        deps: [Injector]\n      },\n      {\n        provide: MessageBus,\n        useFactory: (instance) => instance.bus,\n        deps: [WebWorkerInstance]\n      }\n    ];\n\nexport function initializeGenericWorkerRenderer(injector: Injector) {\n  var bus = injector.get(MessageBus);\n  let zone = injector.get(NgZone);\n  bus.attachToZone(zone);\n\n  // initialize message services after the bus has been created\n  let services = injector.get(WORKER_RENDER_STARTABLE_MESSAGING_SERVICE);\n  zone.runGuarded(() => { services.forEach((svc) => { svc.start(); }); });\n}\n\nexport function bootstrapRender(\n  workerScriptUri: string,\n  customProviders?: Array<any /*Type | Provider | any[]*/>): Promise<ApplicationRef> {\n  var app = ReflectiveInjector.resolveAndCreate(\n    [\n      WORKER_RENDER_APPLICATION_PROVIDERS,\n      BROWSER_APP_COMPILER_PROVIDERS,\n      {provide: WORKER_SCRIPT, useValue: workerScriptUri},\n      isPresent(customProviders) ? customProviders : []\n    ],\n    workerRenderPlatform().injector);\n  // Return a promise so that we keep the same semantics as Dart,\n  // and we might want to wait for the app side to come up\n  // in the future...\n  return PromiseWrapper.resolve(app.get(ApplicationRef));\n}\n\nfunction initWebWorkerRenderPlatform(): void {\n  BrowserDomAdapter.makeCurrent();\n  wtfInit();\n  BrowserGetTestability.init();\n}\n\nexport function workerRenderPlatform(): PlatformRef {\n  if (isBlank(getPlatform())) {\n    createPlatform(ReflectiveInjector.resolveAndCreate(WORKER_RENDER_PLATFORM_PROVIDERS));\n  }\n  return assertPlatform(WORKER_RENDER_PLATFORM_MARKER);\n}\n\nfunction _exceptionHandler(): ExceptionHandler {\n  return new ExceptionHandler(getDOM());\n}\n\nfunction _document(): any {\n  return getDOM().defaultDoc();\n}\n\nfunction initWebWorkerApplication(injector: Injector): void {\n  var scriptUri: string;\n  try {\n    scriptUri = injector.get(WORKER_SCRIPT);\n  } catch (e) {\n    throw new BaseException(\n      \"You must provide your WebWorker's initialization script with the WORKER_SCRIPT token\");\n  }\n\n  let instance = injector.get(WebWorkerInstance);\n  spawnWebWorker(scriptUri, instance);\n\n  initializeGenericWorkerRenderer(injector);\n}\n\n/**\n * Spawns a new class and initializes the WebWorkerInstance\n */\nfunction spawnWebWorker(uri: string, instance: WebWorkerInstance): void {\n  var webWorker: Worker = new Worker(uri);\n  var sink = new PostMessageBusSink(webWorker);\n  var source = new PostMessageBusSource(webWorker);\n  var bus = new PostMessageBus(sink, source);\n\n  instance.init(webWorker, bus);\n}\n\nfunction _resolveDefaultAnimationDriver(): AnimationDriver {\n  // web workers have not been tested or configured to\n  // work with animations just yet...\n  return new NoOpAnimationDriver();\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}