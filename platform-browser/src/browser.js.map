{"version":3,"file":"browser.js","sourceRoot":"","sources":["../../../../modules/@angular/platform-browser/src/browser.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  PLATFORM_INITIALIZER,\n  PLATFORM_DIRECTIVES,\n  PLATFORM_PIPES,\n  ExceptionHandler,\n  RootRenderer,\n  APPLICATION_COMMON_PROVIDERS,\n  PLATFORM_COMMON_PROVIDERS,\n  OpaqueToken,\n  Testability,\n  PlatformRef,\n  getPlatform,\n  createPlatform,\n  assertPlatform,\n  ReflectiveInjector,\n  coreLoadAndBootstrap,\n  Type,\n  ComponentRef\n} from \"@angular/core\";\nimport {isBlank, isPresent} from \"./facade/lang\";\nimport {wtfInit, SanitizationService, ReflectionCapabilities, AnimationDriver, NoOpAnimationDriver} from '../core_private';\nimport {WebAnimationsDriver} from '../src/dom/web_animations_driver';\nimport {COMMON_DIRECTIVES, COMMON_PIPES, FORM_PROVIDERS, PlatformLocation} from \"@angular/common\";\nimport {DomSanitizationService, DomSanitizationServiceImpl} from \"./security/dom_sanitization_service\";\nimport {BrowserDomAdapter} from \"./browser/browser_adapter\";\nimport {BrowserGetTestability} from \"./browser/testability\";\nimport {getDOM} from \"./dom/dom_adapter\";\nimport {DOCUMENT} from \"./dom/dom_tokens\";\nimport {EVENT_MANAGER_PLUGINS, EventManager} from \"./dom/events/event_manager\";\nimport {DomRootRenderer, DomRootRenderer_} from \"./dom/dom_renderer\";\nimport {SharedStylesHost, DomSharedStylesHost} from \"./dom/shared_styles_host\";\nimport {KeyEventsPlugin} from \"./dom/events/key_events\";\nimport {ELEMENT_PROBE_PROVIDERS} from \"./dom/debug/ng_probe\";\nimport {DomEventsPlugin} from \"./dom/events/dom_events\";\nimport {HAMMER_GESTURE_CONFIG, HammerGestureConfig, HammerGesturesPlugin} from \"./dom/events/hammer_gestures\";\nimport {BrowserPlatformLocation} from \"./browser/location/browser_platform_location\";\nimport {COMPILER_PROVIDERS, XHR} from \"@angular/compiler\";\nimport {CachedXHR} from \"./xhr/xhr_cache\";\nimport {XHRImpl} from \"./xhr/xhr_impl\";\nimport {reflector} from '../core_private';\n\nexport const CACHED_TEMPLATE_PROVIDER: Array<any /*Type | Provider | any[]*/> =\n  [{provide: XHR, useClass: CachedXHR}];\n\nconst BROWSER_PLATFORM_MARKER = new OpaqueToken('BrowserPlatformMarker');\n\n/**\n * A set of providers to initialize the Angular platform in a web browser.\n *\n * Used automatically by `bootstrap`, or can be passed to {@link platform}.\n */\nexport const BROWSER_PLATFORM_PROVIDERS: Array<any /*Type | Provider | any[]*/> = [\n  {provide: BROWSER_PLATFORM_MARKER, useValue: true},\n  PLATFORM_COMMON_PROVIDERS,\n  {provide: PLATFORM_INITIALIZER, useValue: initDomAdapter, multi: true},\n  {provide: PlatformLocation, useClass: BrowserPlatformLocation}\n];\n\nexport const BROWSER_SANITIZATION_PROVIDERS: Array<any> = [\n  {provide: SanitizationService, useExisting: DomSanitizationService},\n  {provide: DomSanitizationService, useClass: DomSanitizationServiceImpl},\n];\n\n/**\n * A set of providers to initialize an Angular application in a web browser.\n *\n * Used automatically by `bootstrap`, or can be passed to {@link PlatformRef.application}.\n */\nexport const BROWSER_APP_PROVIDERS: Array<any /*Type | Provider | any[]*/> =\n    [\n      APPLICATION_COMMON_PROVIDERS,\n      FORM_PROVIDERS,\n      BROWSER_SANITIZATION_PROVIDERS,\n      {provide: PLATFORM_PIPES, useValue: COMMON_PIPES, multi: true},\n      {provide: PLATFORM_DIRECTIVES, useValue: COMMON_DIRECTIVES, multi: true},\n      {provide: ExceptionHandler, useFactory: _exceptionHandler, deps: []},\n      {provide: DOCUMENT, useFactory: _document, deps: []},\n      {provide: EVENT_MANAGER_PLUGINS, useClass: DomEventsPlugin, multi: true},\n      {provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, multi: true},\n      {provide: EVENT_MANAGER_PLUGINS, useClass: HammerGesturesPlugin, multi: true},\n      {provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig},\n      {provide: DomRootRenderer, useClass: DomRootRenderer_},\n      {provide: RootRenderer, useExisting: DomRootRenderer},\n      {provide: SharedStylesHost, useExisting: DomSharedStylesHost},\n      {provide: AnimationDriver, useFactory: _resolveDefaultAnimationDriver},\n      DomSharedStylesHost,\n      Testability,\n      EventManager,\n      ELEMENT_PROBE_PROVIDERS\n    ];\n\nexport const BROWSER_APP_COMPILER_PROVIDERS: Array<any /*Type | Provider | any[]*/> =\n  [\n    COMPILER_PROVIDERS,\n    {provide: XHR, useClass: XHRImpl},\n  ];\n\nexport function browserPlatform(): PlatformRef {\n  if (isBlank(getPlatform())) {\n    createPlatform(ReflectiveInjector.resolveAndCreate(BROWSER_PLATFORM_PROVIDERS));\n  }\n  return assertPlatform(BROWSER_PLATFORM_MARKER);\n}\n\n/**\n * Bootstrapping for Angular applications.\n *\n * You instantiate an Angular application by explicitly specifying a component to use\n * as the root component for your application via the `bootstrap()` method.\n *\n * ## Simple Example\n *\n * Assuming this `index.html`:\n *\n * ```html\n * <html>\n *   <!-- load Angular script tags here. -->\n *   <body>\n *     <my-app>loading...</my-app>\n *   </body>\n * </html>\n * ```\n *\n * An application is bootstrapped inside an existing browser DOM, typically `index.html`.\n * Unlike Angular 1, Angular 2 does not compile/process providers in `index.html`. This is\n * mainly for security reasons, as well as architectural changes in Angular 2. This means\n * that `index.html` can safely be processed using server-side technologies such as\n * providers. Bindings can thus use double-curly `{{ syntax }}` without collision from\n * Angular 2 component double-curly `{{ syntax }}`.\n *\n * We can use this script code:\n *\n * {@example core/ts/bootstrap/bootstrap.ts region='bootstrap'}\n *\n * When the app developer invokes `bootstrap()` with the root component `MyApp` as its\n * argument, Angular performs the following tasks:\n *\n *  1. It uses the component's `selector` property to locate the DOM element which needs\n *     to be upgraded into the angular component.\n *  2. It creates a new child injector (from the platform injector). Optionally, you can\n *     also override the injector configuration for an app by invoking `bootstrap` with the\n *     `componentInjectableBindings` argument.\n *  3. It creates a new `Zone` and connects it to the angular application's change detection\n *     domain instance.\n *  4. It creates an emulated or shadow DOM on the selected component's host element and loads the\n *     template into it.\n *  5. It instantiates the specified component.\n *  6. Finally, Angular performs change detection to apply the initial data providers for the\n *     application.\n *\n *\n * ## Bootstrapping Multiple Applications\n *\n * When working within a browser window, there are many singleton resources: cookies, title,\n * location, and others. Angular services that represent these resources must likewise be\n * shared across all Angular applications that occupy the same browser window. For this\n * reason, Angular creates exactly one global platform object which stores all shared\n * services, and each angular application injector has the platform injector as its parent.\n *\n * Each application has its own private injector as well. When there are multiple\n * applications on a page, Angular treats each application injector's services as private\n * to that application.\n *\n * ## API\n *\n * - `appComponentType`: The root component which should act as the application. This is\n *   a reference to a `Type` which is annotated with `@Component(...)`.\n * - `customProviders`: An additional set of providers that can be added to the\n *   app injector to override default injection behavior.\n *\n * Returns a `Promise` of {@link ComponentRef}.\n */\nexport function bootstrap(\n  appComponentType: Type,\n  customProviders?: Array<any /*Type | Provider | any[]*/>): Promise<ComponentRef<any>> {\n  reflector.reflectionCapabilities = new ReflectionCapabilities();\n  let providers = [\n    BROWSER_APP_PROVIDERS,\n    BROWSER_APP_COMPILER_PROVIDERS,\n    isPresent(customProviders) ? customProviders : []\n  ];\n  var appInjector = ReflectiveInjector.resolveAndCreate(providers, browserPlatform().injector);\n  return coreLoadAndBootstrap(appComponentType, appInjector);\n}\n\nfunction initDomAdapter() {\n  BrowserDomAdapter.makeCurrent();\n  wtfInit();\n  BrowserGetTestability.init();\n}\n\nfunction _exceptionHandler(): ExceptionHandler {\n  return new ExceptionHandler(getDOM());\n}\n\nfunction _document(): any {\n  return getDOM().defaultDoc();\n}\n\nfunction _resolveDefaultAnimationDriver(): AnimationDriver {\n  if (getDOM().supportsWebAnimation()) {\n    return new WebAnimationsDriver();\n  }\n  return new NoOpAnimationDriver();\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}