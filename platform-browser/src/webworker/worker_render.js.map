{"version":3,"file":"worker_render.js","sourceRoot":"","sources":["../../../../../modules/@angular/platform-browser/src/webworker/worker_render.ts"],"names":[],"mappings":";AAAA,iCAIO,wCAAwC,CAAC,CAAA;AAChD,4BAAyB,mCAAmC,CAAC,CAAA;AAC7D,qBAAoD,eAAe,CAAC,CAAA;AACpE,qCAIO,wBAAwB,CAAC,CAAA;AAChC,2BAA4B,6BAA6B,CAAC,CAAA;AAE1D,qCAAwD,wBAAwB,CAAC;AAAzE,qHAAyE;AACjF;IAAA;IAYA,CAAC;IARC,gBAAgB;IACT,gCAAI,GAAX,UAAY,MAAc,EAAE,GAAe;QACzC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;IACjB,CAAC;IACI,4BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,iBAAU,EAAE;KACnB,CAAC;IACF,wBAAC;AAAD,CAAC,AAZD,IAYC;AAZY,yBAAiB,oBAY7B,CAAA;AAED;;GAEG;AACU,2CAAmC,GAA6D;IAC3G,iEAA0C,EAAE,iBAAiB;IAC7D,qBAAqB,CAAC;QACpB,OAAO,EAAE,sBAAe;QACxB,UAAU,EAAE,CAAC,UAAA,QAAQ,IAAI,OAAA,cAAM,OAAA,wBAAwB,CAAC,QAAQ,CAAC,EAAlC,CAAkC,EAAxC,CAAwC,CAAC;QAClE,KAAK,EAAE,IAAI;QACX,IAAI,EAAE,CAAC,eAAQ,CAAC;KACjB;IACD,qBAAqB,CAAC;QACpB,OAAO,EAAE,wBAAU;QACnB,UAAU,EAAE,UAAC,QAAQ,IAAK,OAAA,QAAQ,CAAC,GAAG,EAAZ,CAAY;QACtC,IAAI,EAAE,CAAC,iBAAiB,CAAC;KAC1B;CACF,CAAC;AAEF,kCAAkC,QAAkB;IAClD,IAAI,SAAiB,CAAC;IACtB,IAAI,CAAC;QACH,SAAS,GAAG,QAAQ,CAAC,GAAG,CAAC,oCAAa,CAAC,CAAC;IAC1C,CAAE;IAAA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACX,MAAM,IAAI,0BAAa,CACnB,sFAAsF,CAAC,CAAC;IAC9F,CAAC;IAED,IAAI,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;IAC/C,cAAc,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;IAEpC,sDAA+B,CAAC,QAAQ,CAAC,CAAC;AAC5C,CAAC;AAED;;GAEG;AACH,wBAAwB,GAAW,EAAE,QAA2B;IAC9D,IAAI,SAAS,GAAW,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC;IACxC,IAAI,IAAI,GAAG,IAAI,qCAAkB,CAAC,SAAS,CAAC,CAAC;IAC7C,IAAI,MAAM,GAAG,IAAI,uCAAoB,CAAC,SAAS,CAAC,CAAC;IACjD,IAAI,GAAG,GAAG,IAAI,iCAAc,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IAE3C,QAAQ,CAAC,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;AAChC,CAAC","sourcesContent":["import {\n  PostMessageBus,\n  PostMessageBusSink,\n  PostMessageBusSource\n} from '../web_workers/shared/post_message_bus';\nimport {MessageBus} from '../web_workers/shared/message_bus';\nimport {Injector, Injectable, APP_INITIALIZER} from '@angular/core';\nimport {\n  WORKER_RENDER_APPLICATION_COMMON_PROVIDERS,\n  WORKER_SCRIPT,\n  initializeGenericWorkerRenderer\n} from './worker_render_common';\nimport {BaseException} from '../../src/facade/exceptions';\n\nexport {WORKER_RENDER_STARTABLE_MESSAGING_SERVICE} from './worker_render_common';\nexport class WebWorkerInstance {\n  public worker: Worker;\n  public bus: MessageBus;\n\n  /** @internal */\n  public init(worker: Worker, bus: MessageBus) {\n    this.worker = worker;\n    this.bus = bus;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n}\n\n/**\n * An array of providers that should be passed into `application()` when initializing a new Worker.\n */\nexport const WORKER_RENDER_APPLICATION_PROVIDERS: Array<any /*Type | Provider | any[]*/> = /*@ts2dart_const*/[\n  WORKER_RENDER_APPLICATION_COMMON_PROVIDERS, WebWorkerInstance,\n  /*@ts2dart_Provider*/ {\n    provide: APP_INITIALIZER,\n    useFactory: (injector => () => initWebWorkerApplication(injector)),\n    multi: true,\n    deps: [Injector]\n  },\n  /*@ts2dart_Provider*/ {\n    provide: MessageBus,\n    useFactory: (instance) => instance.bus,\n    deps: [WebWorkerInstance]\n  }\n];\n\nfunction initWebWorkerApplication(injector: Injector): void {\n  var scriptUri: string;\n  try {\n    scriptUri = injector.get(WORKER_SCRIPT);\n  } catch (e) {\n    throw new BaseException(\n        \"You must provide your WebWorker's initialization script with the WORKER_SCRIPT token\");\n  }\n\n  let instance = injector.get(WebWorkerInstance);\n  spawnWebWorker(scriptUri, instance);\n\n  initializeGenericWorkerRenderer(injector);\n}\n\n/**\n * Spawns a new class and initializes the WebWorkerInstance\n */\nfunction spawnWebWorker(uri: string, instance: WebWorkerInstance): void {\n  var webWorker: Worker = new Worker(uri);\n  var sink = new PostMessageBusSink(webWorker);\n  var source = new PostMessageBusSource(webWorker);\n  var bus = new PostMessageBus(sink, source);\n\n  instance.init(webWorker, bus);\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}