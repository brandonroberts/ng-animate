{"version":3,"file":"browser.js","sourceRoot":"","sources":["../../../../modules/@angular/platform-browser/testing/browser.ts"],"names":[],"mappings":";AAAA,+BAGO,kBAAkB,CAAC,CAAA;AAC1B,sBAAoC,UAAU,CAAC,CAAA;AAC/C,yBAA8C,mBAAmB,CAAC,CAAA;AAClE,wBAKO,2BAA2B,CAAC,CAAA;AACnC,4CAAuC,+BAA+B,CAAC,CAAA;AAEvE;;GAEG;AACU,uCAA+B;AACxC,kBAAkB,CAAA,CAAC,uDAAsC,CAAC,CAAC;AAGlD,yCAAiC,GAAG;IAC/C,qBAAqB,CAAC,EAAC,OAAO,EAAE,4BAAiB,EAAE,QAAQ,EAAE,+BAAqB,EAAC;IACnF,qBAAqB,CAAC,EAAC,OAAO,EAAE,uBAAY,EAAE,QAAQ,EAAE,0BAAgB,EAAC;IACzE,8BAAoB;IACpB,qBAAqB,CAAC,EAAC,OAAO,EAAE,+BAAqB,EAAE,QAAQ,EAAE,sDAAwB,EAAC;CAC3F,CAAC;AAEF;;GAEG;AACU,0CAAkC;AAC3C,kBAAkB,CAAA;IAChB,6BAAqB;IACrB,yDAAwC;IACxC,yCAAiC;CAClC,CAAC","sourcesContent":["import {\n  TEST_BROWSER_STATIC_PLATFORM_PROVIDERS,\n  ADDITIONAL_TEST_BROWSER_STATIC_PROVIDERS\n} from './browser_static';\nimport {BROWSER_APP_PROVIDERS} from '../index';\nimport {DirectiveResolver, ViewResolver} from '@angular/compiler';\nimport {\n  MockDirectiveResolver,\n  MockViewResolver,\n  TestComponentRenderer,\n  TestComponentBuilder\n} from '@angular/compiler/testing';\nimport {DOMTestComponentRenderer} from './dom_test_component_renderer';\n\n/**\n * Default platform providers for testing.\n */\nexport const TEST_BROWSER_PLATFORM_PROVIDERS: Array<any /*Type | Provider | any[]*/> =\n    /*@ts2dart_const*/[TEST_BROWSER_STATIC_PLATFORM_PROVIDERS];\n\n\nexport const ADDITIONAL_TEST_BROWSER_PROVIDERS = [\n  /*@ts2dart_Provider*/ {provide: DirectiveResolver, useClass: MockDirectiveResolver},\n  /*@ts2dart_Provider*/ {provide: ViewResolver, useClass: MockViewResolver},\n  TestComponentBuilder,\n  /*@ts2dart_Provider*/ {provide: TestComponentRenderer, useClass: DOMTestComponentRenderer},\n];\n\n/**\n * Default application providers for testing.\n */\nexport const TEST_BROWSER_APPLICATION_PROVIDERS: Array<any /*Type | Provider | any[]*/> =\n    /*@ts2dart_const*/[\n      BROWSER_APP_PROVIDERS,\n      ADDITIONAL_TEST_BROWSER_STATIC_PROVIDERS,\n      ADDITIONAL_TEST_BROWSER_PROVIDERS\n    ];\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}