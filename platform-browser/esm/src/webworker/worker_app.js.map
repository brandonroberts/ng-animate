{"version":3,"file":"worker_app.js","sourceRoot":"","sources":["../../../../../../modules/@angular/platform-browser/src/webworker/worker_app.ts"],"names":[],"mappings":"OAAO,EAAC,eAAe,EAAE,MAAM,EAAC,MAAM,eAAe;OAC9C,EAAC,gBAAgB,EAAC,MAAM,sCAAsC;OAC9D,EACL,cAAc,EACd,kBAAkB,EAClB,oBAAoB,EACrB,MAAM,wCAAwC;OACxC,EAAC,uCAAuC,EAAC,MAAM,qBAAqB;OACpE,EAAC,UAAU,EAAC,MAAM,mCAAmC;AAE5D,4EAA4E;AAC5E,IAAI,YAAY,GAAG;IACjB,WAAW,EAAE,CAAC,OAAY,EAAE,cAA6B;QACjD,WAAY,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;IAC9C,CAAC;CACF,CAAC;AAEF,OAAO,MAAM,gCAAgC,GAA2C;IACtF,uCAAuC;IACvC,uBAAuB,CAAC,EAAC,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,gBAAgB,EAAE,IAAI,EAAE,CAAC,MAAM,CAAC,EAAC;IAC3F,uBAAuB,CAAC,EAAC,OAAO,EAAE,eAAe,EAAE,QAAQ,EAAE,cAAc,EAAE,KAAK,EAAE,IAAI,EAAC;CAC1F,CAAC;AAEF,0BAA0B,IAAY;IACpC,IAAI,IAAI,GAAG,IAAI,kBAAkB,CAAC,YAAY,CAAC,CAAC;IAChD,IAAI,MAAM,GAAG,IAAI,oBAAoB,EAAE,CAAC;IACxC,IAAI,GAAG,GAAG,IAAI,cAAc,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IAC3C,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;IACvB,MAAM,CAAC,GAAG,CAAC;AACb,CAAC;AAED;IACE,gBAAgB,CAAC,WAAW,EAAE,CAAC;AACjC,CAAC","sourcesContent":["import {APP_INITIALIZER, NgZone} from '@angular/core';\nimport {WorkerDomAdapter} from '../web_workers/worker/worker_adapter';\nimport {\n  PostMessageBus,\n  PostMessageBusSink,\n  PostMessageBusSource\n} from '../web_workers/shared/post_message_bus';\nimport {WORKER_APP_APPLICATION_COMMON_PROVIDERS} from './worker_app_common';\nimport {MessageBus} from '../web_workers/shared/message_bus';\n\n// TODO(jteplitz602) remove this and compile with lib.webworker.d.ts (#3492)\nlet _postMessage = {\n  postMessage: (message: any, transferrables?:[ArrayBuffer]) => {\n    (<any>postMessage)(message, transferrables);\n  }\n};\n\nexport const WORKER_APP_APPLICATION_PROVIDERS: Array<any /*Type | Provider | any[]*/> = [\n  WORKER_APP_APPLICATION_COMMON_PROVIDERS,\n  /* @ts2dart_Provider */ {provide: MessageBus, useFactory: createMessageBus, deps: [NgZone]},\n  /* @ts2dart_Provider */ {provide: APP_INITIALIZER, useValue: setupWebWorker, multi: true}\n];\n\nfunction createMessageBus(zone: NgZone): MessageBus {\n  let sink = new PostMessageBusSink(_postMessage);\n  let source = new PostMessageBusSource();\n  let bus = new PostMessageBus(sink, source);\n  bus.attachToZone(zone);\n  return bus;\n}\n\nfunction setupWebWorker(): void {\n  WorkerDomAdapter.makeCurrent();\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}