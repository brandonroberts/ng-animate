{"version":3,"file":"worker_app.js","sourceRoot":"","sources":["../../../../../../../modules/@angular/platform-browser/src/platform/common/worker_app.ts"],"names":[],"mappings":"OAAO,EAAC,qBAAqB,EAAC,MAAM,mCAAmC;OAChE,EAAC,KAAK,EAAE,OAAO,EAAC,MAAM,0BAA0B;OAChD,EACL,mBAAmB,EACnB,cAAc,EACd,gBAAgB,EAChB,4BAA4B,EAC5B,yBAAyB,EACzB,WAAW,EACX,YAAY,EAEZ,WAAW,EACX,cAAc,EACd,cAAc,EACd,kBAAkB,EACnB,MAAM,eAAe;OACf,EAAC,iBAAiB,EAAE,YAAY,EAAE,cAAc,EAAC,MAAM,iBAAiB;OACxE,EACL,0BAA0B,EAC1B,2BAA2B,EAC5B,MAAM,gDAAgD;OAChD,EACL,2BAA2B,EAC3B,4BAA4B,EAC7B,MAAM,iDAAiD;OACjD,EAAC,UAAU,EAAC,MAAM,qCAAqC;OACvD,EAAC,aAAa,EAAC,MAAM,8BAA8B;OACnD,EAAC,WAAW,EAAC,MAAM,uCAAuC;OAC1D,EAAC,8BAA8B,EAAC,MAAM,WAAW;AAExD;IAAA;QACE,QAAG,GAAG,KAAK,CAAC;QACZ,aAAQ,GAAG,KAAK,CAAC;QACjB,aAAQ,GAAG,KAAK,CAAC;IAEnB,CAAC;IADC,WAAW,KAAI,CAAC;AAClB,CAAC;AAED,MAAM,0BAA0B;AAC5B,kBAAkB,CAAC,IAAI,WAAW,CAAC,yBAAyB,CAAC,CAAC;AAElE,OAAO,MAAM,6BAA6B;AACtC,kBAAkB,CAAA;IAChB,yBAAyB;IACzB,kBAAkB,CAAC;IACf,uBAAuB,CAAC,EAAC,OAAO,EAAE,0BAA0B,EAAE,QAAQ,EAAE,IAAI,EAAC,CAAC;CACnF,CAAC;AAEN,OAAO,MAAM,uCAAuC;AAChD,kBAAkB,CAAA;IAChB,4BAA4B;IAC5B,cAAc;IACd,8BAA8B;IAC9B,UAAU;IACV,uBAAuB,CAAC,EAAC,OAAO,EAAE,cAAc,EAAE,QAAQ,EAAE,YAAY,EAAE,KAAK,EAAE,IAAI,EAAC;IACtF,uBAAuB,CAAC,EAAC,OAAO,EAAE,mBAAmB,EAAE,QAAQ,EAAE,iBAAiB,EAAE,KAAK,EAAE,IAAI,EAAC;IAChG,uBAAuB,CAAC,EAAC,OAAO,EAAE,0BAA0B,EAAE,QAAQ,EAAE,2BAA2B,EAAC;IACpG,uBAAuB,CAAC,EAAC,OAAO,EAAE,2BAA2B,EAAE,QAAQ,EAAE,4BAA4B,EAAC;IACtG,qBAAqB;IACrB,uBAAuB,CAAC,EAAC,OAAO,EAAE,YAAY,EAAE,WAAW,EAAE,qBAAqB,EAAC;IACnF,uBAAuB,CAAC,EAAC,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,IAAI,EAAC;IAChE,WAAW;IACX,uBAAuB,CAAC,EAAC,OAAO,EAAE,gBAAgB,EAAE,UAAU,EAAE,iBAAiB,EAAE,IAAI,EAAE,EAAE,EAAC;CAC7F,CAAC;AAEN;IACE,EAAE,CAAC,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC;QAC3B,cAAc,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,6BAA6B,CAAC,CAAC,CAAC;IACrF,CAAC;IACD,MAAM,CAAC,cAAc,CAAC,0BAA0B,CAAC,CAAC;AACpD,CAAC;AAED;IACE,MAAM,CAAC,IAAI,gBAAgB,CAAC,IAAI,WAAW,EAAE,CAAC,CAAC;AACjD,CAAC","sourcesContent":["import {WebWorkerRootRenderer} from '../../web_workers/worker/renderer';\nimport {print, isBlank} from '../../../src/facade/lang';\nimport {\n  PLATFORM_DIRECTIVES,\n  PLATFORM_PIPES,\n  ExceptionHandler,\n  APPLICATION_COMMON_PROVIDERS,\n  PLATFORM_COMMON_PROVIDERS,\n  OpaqueToken,\n  RootRenderer,\n  PlatformRef,\n  getPlatform,\n  createPlatform,\n  assertPlatform,\n  ReflectiveInjector\n} from '@angular/core';\nimport {COMMON_DIRECTIVES, COMMON_PIPES, FORM_PROVIDERS} from '@angular/common';\nimport {\n  ClientMessageBrokerFactory,\n  ClientMessageBrokerFactory_\n} from '../../web_workers/shared/client_message_broker';\nimport {\n  ServiceMessageBrokerFactory,\n  ServiceMessageBrokerFactory_\n} from '../../web_workers/shared/service_message_broker';\nimport {Serializer} from '../../web_workers/shared/serializer';\nimport {ON_WEB_WORKER} from '../../web_workers/shared/api';\nimport {RenderStore} from '../../web_workers/shared/render_store';\nimport {BROWSER_SANITIZATION_PROVIDERS} from './browser';\n\nclass PrintLogger {\n  log = print;\n  logError = print;\n  logGroup = print;\n  logGroupEnd() {}\n}\n\nconst WORKER_APP_PLATFORM_MARKER =\n    /*@ts2dart_const*/ new OpaqueToken('WorkerAppPlatformMarker');\n\nexport const WORKER_APP_PLATFORM_PROVIDERS: Array<any /*Type | Provider | any[]*/> =\n    /*@ts2dart_const*/[\n      PLATFORM_COMMON_PROVIDERS,\n      /*@ts2dart_const*/ (\n          /* @ts2dart_Provider */ {provide: WORKER_APP_PLATFORM_MARKER, useValue: true})\n    ];\n\nexport const WORKER_APP_APPLICATION_COMMON_PROVIDERS: Array<any /*Type | Provider | any[]*/> =\n    /*@ts2dart_const*/[\n      APPLICATION_COMMON_PROVIDERS,\n      FORM_PROVIDERS,\n      BROWSER_SANITIZATION_PROVIDERS,\n      Serializer,\n      /* @ts2dart_Provider */ {provide: PLATFORM_PIPES, useValue: COMMON_PIPES, multi: true},\n      /* @ts2dart_Provider */ {provide: PLATFORM_DIRECTIVES, useValue: COMMON_DIRECTIVES, multi: true},\n      /* @ts2dart_Provider */ {provide: ClientMessageBrokerFactory, useClass: ClientMessageBrokerFactory_},\n      /* @ts2dart_Provider */ {provide: ServiceMessageBrokerFactory, useClass: ServiceMessageBrokerFactory_},\n      WebWorkerRootRenderer,\n      /* @ts2dart_Provider */ {provide: RootRenderer, useExisting: WebWorkerRootRenderer},\n      /* @ts2dart_Provider */ {provide: ON_WEB_WORKER, useValue: true},\n      RenderStore,\n      /* @ts2dart_Provider */ {provide: ExceptionHandler, useFactory: _exceptionHandler, deps: []}\n    ];\n\nexport function workerAppPlatform(): PlatformRef {\n  if (isBlank(getPlatform())) {\n    createPlatform(ReflectiveInjector.resolveAndCreate(WORKER_APP_PLATFORM_PROVIDERS));\n  }\n  return assertPlatform(WORKER_APP_PLATFORM_MARKER);\n}\n\nfunction _exceptionHandler(): ExceptionHandler {\n  return new ExceptionHandler(new PrintLogger());\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}