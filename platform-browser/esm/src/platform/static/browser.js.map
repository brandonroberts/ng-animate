{"version":3,"file":"browser.js","sourceRoot":"","sources":["../../../../../../../modules/@angular/platform-browser/src/platform/static/browser.ts"],"names":[],"mappings":"OAAO,EAEL,oBAAoB,EACpB,kBAAkB,EACnB,MAAM,eAAe;OACf,EAAO,SAAS,EAAC,MAAM,mBAAmB;OAC1C,EACL,4BAA4B,EAC5B,eAAe,EAChB,MAAM,mBAAmB;AAE1B;;;GAGG;AACH,OAAO,MAAM,4BAA4B;AACrC,kBAAkB,CAAC,4BAA4B,CAAC;AAEpD;;GAEG;AACH,gCAAgC,gBAAsB,EACtB,eAAwD,EACxD,aAAwB;IACtD,EAAE,CAAC,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;QAC7B,aAAa,EAAE,CAAC;IAClB,CAAC;IAED,IAAI,YAAY,GAAG,SAAS,CAAC,eAAe,CAAC,GAAG,CAAC,4BAA4B,EAAE,eAAe,CAAC;QAC/C,4BAA4B,CAAC;IAC7E,IAAI,WAAW,GACX,kBAAkB,CAAC,gBAAgB,CAAC,YAAY,EAAE,eAAe,EAAE,CAAC,QAAQ,CAAC,CAAC;IAClF,MAAM,CAAC,oBAAoB,CAAC,WAAW,EAAE,gBAAgB,CAAC,CAAC;AAC7D,CAAC","sourcesContent":["import {\n  ComponentRef,\n  coreLoadAndBootstrap,\n  ReflectiveInjector\n} from '@angular/core';\nimport {Type, isPresent} from '../../facade/lang';\nimport {\n  BROWSER_APP_COMMON_PROVIDERS,\n  browserPlatform\n} from '../common/browser';\n\n/**\n * An array of providers that should be passed into `application()` when bootstrapping a component\n * when all templates have been pre-compiled.\n */\nexport const BROWSER_APP_STATIC_PROVIDERS: Array<any /*Type | Provider | any[]*/> =\n    /*@ts2dart_const*/ BROWSER_APP_COMMON_PROVIDERS;\n\n/**\n * See {@link bootstrap} for more information.\n */\nexport function bootstrapStatic(appComponentType: Type,\n                                customProviders?: Array<any /*Type | Provider | any[]*/>,\n                                initReflector?: Function): Promise<ComponentRef<any>> {\n  if (isPresent(initReflector)) {\n    initReflector();\n  }\n\n  let appProviders = isPresent(customProviders) ? [BROWSER_APP_STATIC_PROVIDERS, customProviders] :\n                                                  BROWSER_APP_STATIC_PROVIDERS;\n  var appInjector =\n      ReflectiveInjector.resolveAndCreate(appProviders, browserPlatform().injector);\n  return coreLoadAndBootstrap(appInjector, appComponentType);\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}