{"version":3,"file":"xhr_impl.js","sourceRoot":"","sources":["../../../../../../modules/@angular/platform-browser-dynamic/src/web_workers/worker/xhr_impl.ts"],"names":[],"mappings":";;;;;;AAAA,qBAAyB,eAAe,CAAC,CAAA;AACzC,yBAAkB,mBAAmB,CAAC,CAAA;AACtC,iCAKO,2BAA2B,CAAC,CAAA;AACnC,8BAA0B,yBAAyB,CAAC,CAAA;AACpD;IAAsC,oCAAG;IAGvC,0BAAY,oBAAgD;QAC1D,iBAAO,CAAC;QACR,IAAI,CAAC,cAAc,GAAG,oBAAoB,CAAC,mBAAmB,CAAC,2BAAW,CAAC,CAAC;IAC9E,CAAC;IAED,8BAAG,GAAH,UAAI,GAAW;QACb,IAAI,MAAM,GAAY,CAAC,IAAI,wBAAK,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;QAC7C,IAAI,IAAI,GAAgB,IAAI,8BAAW,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QACvD,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IACxD,CAAC;IACI,2BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,iBAAU,EAAE;KACnB,CAAC;IACK,+BAAc,GAA2D;QAChF,EAAC,IAAI,EAAE,6CAA0B,GAAG;KACnC,CAAC;IACF,uBAAC;AAAD,CAAC,AAnBD,CAAsC,cAAG,GAmBxC;AAnBY,wBAAgB,mBAmB5B,CAAA","sourcesContent":["import {Injectable} from '@angular/core';\nimport {XHR} from '@angular/compiler';\nimport {\n  FnArg,\n  UiArguments,\n  ClientMessageBroker,\n  ClientMessageBrokerFactory\n} from '@angular/platform-browser';\nimport {XHR_CHANNEL} from '../shared/messaging_api';\nexport class WebWorkerXHRImpl extends XHR {\n  private _messageBroker: ClientMessageBroker;\n\n  constructor(messageBrokerFactory: ClientMessageBrokerFactory) {\n    super();\n    this._messageBroker = messageBrokerFactory.createMessageBroker(XHR_CHANNEL);\n  }\n\n  get(url: string): Promise<string> {\n    var fnArgs: FnArg[] = [new FnArg(url, null)];\n    var args: UiArguments = new UiArguments(\"get\", fnArgs);\n    return this._messageBroker.runOnService(args, String);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\nstatic ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: ClientMessageBrokerFactory, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}