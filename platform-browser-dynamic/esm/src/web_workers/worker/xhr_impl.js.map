{"version":3,"file":"xhr_impl.js","sourceRoot":"","sources":["../../../../../../../modules/@angular/platform-browser-dynamic/src/web_workers/worker/xhr_impl.ts"],"names":[],"mappings":"OAAO,EAAC,UAAU,EAAC,MAAM,eAAe;OACjC,EAAC,GAAG,EAAC,MAAM,mBAAmB;OAC9B,EACL,KAAK,EACL,WAAW,EAEX,0BAA0B,EAC3B,MAAM,2BAA2B;OAC3B,EAAC,WAAW,EAAC,MAAM,yBAAyB;AACnD,sCAAsC,GAAG;IAGvC,YAAY,oBAAgD;QAC1D,OAAO,CAAC;QACR,IAAI,CAAC,cAAc,GAAG,oBAAoB,CAAC,mBAAmB,CAAC,WAAW,CAAC,CAAC;IAC9E,CAAC;IAED,GAAG,CAAC,GAAW;QACb,IAAI,MAAM,GAAY,CAAC,IAAI,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;QAC7C,IAAI,IAAI,GAAgB,IAAI,WAAW,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;QACvD,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IACxD,CAAC;AAOH,CAAC;AANM,2BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACK,+BAAc,GAA2D;IAChF,EAAC,IAAI,EAAE,0BAA0B,GAAG;CACnC,CACA","sourcesContent":["import {Injectable} from '@angular/core';\nimport {XHR} from '@angular/compiler';\nimport {\n  FnArg,\n  UiArguments,\n  ClientMessageBroker,\n  ClientMessageBrokerFactory\n} from '@angular/platform-browser';\nimport {XHR_CHANNEL} from '../shared/messaging_api';\nexport class WebWorkerXHRImpl extends XHR {\n  private _messageBroker: ClientMessageBroker;\n\n  constructor(messageBrokerFactory: ClientMessageBrokerFactory) {\n    super();\n    this._messageBroker = messageBrokerFactory.createMessageBroker(XHR_CHANNEL);\n  }\n\n  get(url: string): Promise<string> {\n    var fnArgs: FnArg[] = [new FnArg(url, null)];\n    var args: UiArguments = new UiArguments(\"get\", fnArgs);\n    return this._messageBroker.runOnService(args, String);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\nstatic ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: ClientMessageBrokerFactory, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}